steps:
  # Step 1: Try to pull the existing image for build cache (optional)
  - name: 'gcr.io/cloud-builders/docker'
    entrypoint: 'bash'
    args:
      - -c
      - |
        docker pull us-central1-docker.pkg.dev/$PROJECT_ID/${REPO_NAME}-${BRANCH_NAME}/app:latest || exit 0

  # Step 2: Build the Docker image with cache + secrets
  - name: 'gcr.io/cloud-builders/docker'
    entrypoint: 'bash'
    args:
      - -c
      - |
        docker build \
          --cache-from=us-central1-docker.pkg.dev/$PROJECT_ID/${REPO_NAME}-${BRANCH_NAME}/app:latest \
          -t us-central1-docker.pkg.dev/$PROJECT_ID/${REPO_NAME}-${BRANCH_NAME}/app:latest \
          .

  # Step 3: Push the image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - push
      - us-central1-docker.pkg.dev/$PROJECT_ID/${REPO_NAME}-${BRANCH_NAME}/app:latest

  # Step 4: Deploy to Cloud Run with environment variables for ORCID authentication
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      - run
      - deploy
      - app-${BRANCH_NAME}
      - --image=us-central1-docker.pkg.dev/$PROJECT_ID/${REPO_NAME}-${BRANCH_NAME}/app:latest
      - --region=us-central1
      - --platform=managed
      - --allow-unauthenticated
      - --set-env-vars=ORCID_REDIRECT_URI=https://app-2-776258882599.us-central1.run.app/orcid/callback
      - --set-secrets=ORCID_CLIENT_ID=ORCID-CLIENT-ID:latest,ORCID_CLIENT_SECRET=ORCID-CLIENT-SECRET:latest

# Optional: extend timeout if builds are large
timeout: 700s
